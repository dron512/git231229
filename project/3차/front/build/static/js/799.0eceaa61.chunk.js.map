{"version":3,"file":"static/js/799.0eceaa61.chunk.js","mappings":"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","sources":["components/mypage/ReviewBt.js","pages/mypage/MyReview.js","pages/mypage/CreateReview.js","pages/mypage/ReviewPage.js","styles/common/StarCss.js"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\nimport React from \"react\";\nimport { Common } from \"../../styles/CommonCss\";\n\nconst ReviewBt = ({ active, btName, onClick }) => {\n  const ReviewBtStyled = styled.button`\n    width: 159px;\n    height: 45px;\n    background: ${active ? Common.color.b900 : Common.color.p000};\n    border: ${active ? \"none\" : `1px solid ${Common.color.p300}`};\n    color: ${active ? Common.color.p000 : Common.color.p300};\n    font-size: 13px;\n    cursor: pointer;\n  `;\n  return (\n    <>\n      <ReviewBtStyled onClick={onClick}>{btName}</ReviewBtStyled>\n    </>\n  );\n};\n\nexport default ReviewBt;\n","import { ConfigProvider, Table } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { TableCustom } from \"../../styles/common/tableCss\";\r\nimport RvModal, { RvDelete } from \"../../components/mypage/RvModal\";\r\nimport { StarRev } from \"../../styles/common/StarCss\";\r\nimport { getReviewList } from \"../../api/reviewApi\";\r\nimport { BasicBtR } from \"../../styles/basic/basicBt\";\r\n\r\nconst onChange = (pagination, filters, sorter, extra) => {\r\n  console.log(\"params\", pagination, filters, sorter, extra);\r\n};\r\n\r\nconst initState = [\r\n  {\r\n    name: \"더 페이머스 그라우스 700ml\",\r\n    writing: \"져라ㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏ\",\r\n    grade: 4,\r\n    picture: \"\",\r\n  },\r\n];\r\nconst MyReview = () => {\r\n  const [myReviewData, setmyReviewData] = useState(initState);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalKey, setModalKey] = useState();\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const handleShowModal = index => {\r\n    setShowModal(true);\r\n    setModalKey(index);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getReviewList({\r\n      successFn: data => {\r\n        setmyReviewData(data);\r\n      },\r\n      failFn: data => {\r\n        alert(\"most 실패\");\r\n      },\r\n      errorFn: data => {\r\n        alert(\"서버상태 불안정 다음에 시도\");\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    getReviewList({\r\n      successFn: data => {\r\n        setmyReviewData(data);\r\n      },\r\n      failFn: data => {\r\n        alert(\"most 실패\");\r\n      },\r\n      errorFn: data => {\r\n        alert(\"서버상태 불안정 다음에 시도\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"이미지\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div>\r\n          <img\r\n            style={{ width: \"80px\", marginBottom: \"10px\" }}\r\n            src={process.env.PUBLIC_URL + record.picture}\r\n            alt=\"리뷰 작성\"\r\n          />\r\n          <StarRev>\r\n            {Array.from({ length: record.grade }, (_, index) => (\r\n              <img\r\n                key={index}\r\n                src={process.env.PUBLIC_URL + \"/images/star.png\"}\r\n                alt=\"star\"\r\n              />\r\n            ))}\r\n          </StarRev>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"제품명\",\r\n      dataIndex: \"productNm\",\r\n      render: (text, record) => (\r\n        <div>\r\n          <p>{record.name}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"내용\",\r\n      dataIndex: \"content\",\r\n      render: (text, record,index) => (\r\n        <div\r\n          style={{\r\n            width: \"600px\",\r\n            wordWrap: \"break-word\",\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <p>{record.writing}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"리뷰삭제\",\r\n      button: <button>ddldldd</button>,\r\n      render: (text, record, index) => (\r\n        <BasicBtR onClick={() => handleShowModal(index)}>리뷰 삭제</BasicBtR>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorPrimary: Common.color.p900,\r\n        },\r\n        components: {\r\n          Table: {\r\n            headerBg: \"none\",\r\n            headerColor: Common.color.p500,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCustom\r\n        // rowSelection={rowSelection}\r\n        columns={columns}\r\n        dataSource={myReviewData}\r\n        pagination={false}\r\n      />\r\n      {showModal && (\r\n        <RvDelete\r\n          onClose={handleCloseModal}\r\n          code={myReviewData[modalKey]}\r\n          refreshData={fetchData}\r\n        />\r\n      )}\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport default MyReview;\r\n","import { ConfigProvider } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getReviewcheck } from \"../../api/reviewApi\";\r\nimport RvModal from \"../../components/mypage/RvModal\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { BasicBtR } from \"../../styles/basic/basicBt\";\r\nimport { TableCustom } from \"../../styles/common/tableCss\";\r\n\r\n// const onChange = (pagination, filters, sorter, extra) => {\r\n//   console.log(\"params\", pagination, filters, sorter, extra);\r\n// };\r\nconst initState = [\r\n  {\r\n    code: 3,\r\n    name: \"조니워커 블랙 700ml\",\r\n    purchaseday: \"2024-05-02\",\r\n    marketname: \"포도대구동성로점\",\r\n    delivery: \"PickUp\",\r\n    picture: \"\",\r\n  },\r\n];\r\nconst CreateReview = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [reviewListData, setReviewListData] = useState(initState);\r\n  const [modalKey, setModalKey] = useState();\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const handleShowModal = code => {\r\n    setShowModal(true);\r\n    setModalKey(code);\r\n    console.log(\"모달로 전달되는 코드 값:\", code);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReviewcheck({\r\n      successFn: data => {\r\n        setReviewListData(data);\r\n      },\r\n      failFn: data => {\r\n        alert(\"실패\");\r\n      },\r\n      errorFn: data => {\r\n        alert(\"서버상태 불안정 다음에 시도\");\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"이미지\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <img style={{ width: \"80px\" }} src={record.picture} alt=\"리뷰 작성\" />\r\n      ),\r\n    },\r\n    {\r\n      title: \"제품명 | 주문번호\",\r\n      dataIndex: \"test\",\r\n      render: (text, record) => (\r\n        <div>\r\n          <p>{record.name}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"주문일자\",\r\n      dataIndex: \"purchaseday\",\r\n    },\r\n    {\r\n      title: \"매장명\",\r\n      dataIndex: \"marketname\",\r\n    },\r\n    {\r\n      title: \"주문방식\",\r\n      dataIndex: \"delivery\",\r\n    },\r\n    {\r\n      title: \"리뷰작성\",\r\n      button: <button>ddldldd</button>,\r\n      render: (text, record, index) => (\r\n        <BasicBtR onClick={() => handleShowModal(index)}>\r\n          리뷰 작성\r\n        </BasicBtR>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorPrimary: Common.color.p900,\r\n        },\r\n        components: {\r\n          Table: {\r\n            headerBg: \"none\",\r\n            headerColor: Common.color.p500,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCustom\r\n        columns={columns}\r\n        dataSource={reviewListData}\r\n        pagination={false}\r\n      />\r\n      {showModal && (\r\n        <RvModal \r\n        onClose={handleCloseModal} \r\n        code={reviewListData[modalKey]} />\r\n      )}\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport default CreateReview;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport React, { useState } from \"react\";\r\nimport ReviewBt from \"../../components/mypage/ReviewBt\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CreateReview from \"./CreateReview\";\r\n\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport MyReview from \"./MyReview\";\r\nimport { MarginB10, MarginB20 } from \"../../styles/common/reviewProductCss\";\r\nimport { PB20 } from \"../../styles/basic\";\r\n\r\nconst ReviewPage = () => {\r\n  const navigate = useNavigate();\r\n  const [activeNavBt, setActiveNavBt] = useState(1);\r\n  const handleBtClick = reBtId => {\r\n    setActiveNavBt(reBtId);\r\n    console.log(\"선택된 리뷰버튼\", reBtId);\r\n  };\r\n\r\n  const InfoWrap = styled.div`\r\n    width: 100%;\r\n    position: relative;\r\n    hr {\r\n      background-color: ${Common.color.b900};\r\n      height: 3px;\r\n      /* margin-bottom: 20px; */\r\n    }\r\n  `;\r\n  return (\r\n    <InfoWrap>\r\n      <MarginB10 />\r\n      <PB20>상품리뷰</PB20>\r\n      <MarginB20 />\r\n      <div>\r\n        <ReviewBt\r\n          btName=\"작성 가능한 리뷰\"\r\n          reBtId={1}\r\n          active={activeNavBt === 1}\r\n          onClick={() => {\r\n            handleBtClick(1);\r\n          }}\r\n        />\r\n        <ReviewBt\r\n          btName=\"내 리뷰\"\r\n          reBtId={2}\r\n          active={activeNavBt === 2}\r\n          onClick={() => handleBtClick(2)}\r\n        />\r\n      </div>\r\n      <hr />\r\n      <div className=\"page-content\">\r\n        {activeNavBt === 1 ? <CreateReview /> : <MyReview />}\r\n      </div>\r\n    </InfoWrap>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n","import styled from \"@emotion/styled/macro\";\nimport { Common } from \"../CommonCss\";\n\nexport const StarRev = styled.div`\n  /* padding: 10px 0 20px 0; */\n  display: flex;\n  align-items: center;\n  img {\n    width: 19px;\n    height: 15px;\n  }\n  a {\n    margin-left: 10px;\n    font-size: 13px;\n    color: ${Common.color.p400};\n    text-decoration: underline;\n  }\n`;\n"],"names":["_ref","active","btName","onClick","ReviewBtStyled","_styled","target","Common","color","b900","p000","concat","p300","_jsx","_Fragment","children","initState","name","writing","grade","picture","MyReview","myReviewData","setmyReviewData","useState","showModal","setShowModal","modalKey","setModalKey","useEffect","getReviewList","successFn","data","failFn","alert","errorFn","columns","title","dataIndex","render","text","record","_jsxs","style","width","marginBottom","src","process","alt","StarRev","Array","from","length","_","index","wordWrap","textAlign","display","justifyContent","button","BasicBtR","handleShowModal","ConfigProvider","theme","token","colorPrimary","p900","components","Table","headerBg","headerColor","p500","TableCustom","dataSource","pagination","RvDelete","onClose","handleCloseModal","code","refreshData","fetchData","purchaseday","marketname","delivery","CreateReview","reviewListData","setReviewListData","getReviewcheck","console","log","RvModal","ReviewPage","useNavigate","activeNavBt","setActiveNavBt","handleBtClick","reBtId","InfoWrap","MarginB10","PB20","MarginB20","ReviewBt","className","p400"],"sourceRoot":""}