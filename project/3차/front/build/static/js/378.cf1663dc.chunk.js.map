{"version":3,"file":"static/js/378.cf1663dc.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","api/kakaoApi.js","pages/sign/SigninPage.js","styles/login/loginCss.js","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  LockOutlined.displayName = 'LockOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","import axios from \"axios\";\nimport { SERVER_URL } from \"./config\";\n\nSERVER_URL;\n\nconst rest_api_key = \"94b443da7db84c565579d43ba563dd3f\";\nconst redirect_uri = \"http://localhost:3000/sign/kakao\";\nconst auth_code_path = \"https://kauth.kakao.com/oauth/authorize\";\n\nexport const getKakaoLoginLink = () => {\n  const kakaoURL = `${auth_code_path}?client_id=${rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`;\n  return kakaoURL;\n};\n\nconst access_token_url = `https://kauth.kakao.com/oauth/token`;\nexport const getAccessToken = async authCode => {\n  const header = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n    },\n  };\n\n  const params = {\n    grant_type: \"authorization_code\",\n    client_id: rest_api_key,\n    redirect_uri: redirect_uri,\n    code: authCode,\n  };\n\n  const res = await axios.post(access_token_url, params, header);\n\n  const accessToken = res.data.access_token;\n\n  return accessToken;\n};\n\nexport const getMemberWithAccessToken = async accessToken => {\n  console.log(\"백엔드에 회원 등록을 위한 액세스 토큰 전달 \", accessToken);\n  const res = await axios.get(\n    `${SERVER_URL}/api/member/kakao?accessToken=${accessToken}`,\n  );\n\n  return res.data;\n};\n","import { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getKakaoLoginLink } from \"../../api/kakaoApi\";\r\nimport { postLogin } from \"../../api/signUpApi\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { LoginBt, LoginTitle, LoginWrap } from \"../../styles/login/loginCss\";\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const [loginParam, setLoginParam] = useState(initState);\r\n  const kakaoLogin = getKakaoLoginLink();\r\n\r\n  const handleChange = e => {\r\n    // e.target.name\r\n    // e.target.value\r\n    loginParam[e.target.name] = e.target.value;\r\n    setLoginParam({ ...loginParam });\r\n  };\r\n  // 커스터훅 사용하기\r\n  const { doLogin, moveToPath } = useCustomLogin();\r\n  const handleClick = () => {\r\n    const kakaoURL = getKakaoLoginLink();\r\n    window.location.href = kakaoURL;\r\n  };\r\n  const onFinish = async values => {\r\n    try {\r\n      // 로그인 요청\r\n      const result = await postLogin({\r\n        loginParam,\r\n        successFn,\r\n        failFn,\r\n        errorFn: errorFn,\r\n      });\r\n\r\n      // 로그인 성공 시 처리\r\n      successFn(result);\r\n\r\n      // 로그인 후 작업 수행\r\n      doLogin({ loginParam });\r\n    } catch (error) {\r\n      // 로그인 실패 시 처리\r\n      failFn(error);\r\n    }\r\n  };\r\n  const successFn = result => {\r\n    console.log(\"토큰 - \", result);\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  const failFn = result => {\r\n    console.log(\"실패\", result);\r\n    alert(\"이메일 및 비밀번호 확인하세요.\");\r\n  };\r\n\r\n  const errorFn = result => {\r\n    console.log(\"서버 에러\", result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {console.log(\"로그인인포\", loginParam)} */}\r\n      <LoginWrap>\r\n        <LoginTitle>\r\n          <p className=\"logo\">ALCHOHOL HOLIC</p>\r\n          <div className=\"email-line\">\r\n            <div className=\"line\"></div>\r\n            <p>이메일 로그인</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </LoginTitle>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n            email: loginParam.email,\r\n            password: loginParam.password,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"이메일을 입력해 주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"이메일\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해 주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>이메일 저장하기</Checkbox>\r\n              </Form.Item>\r\n              <Link className=\"login-form-forgot\" to=\"/sign/FindIdPw\">\r\n                이메일/ 비밀번호 찾기\r\n              </Link>\r\n            </div>\r\n          </Form.Item>\r\n\r\n          {/* <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <a href=\"\">register now!</a>\r\n          </Form.Item> */}\r\n          <Form.Item>\r\n            {/* 버튼 style */}\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                background: `${Common.color.f900}`,\r\n                fontSize: \"20px\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <LoginTitle>\r\n          <div className=\"login-line\">\r\n            <div className=\"line\"></div>\r\n            <p>간편 로그인/회원가입</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </LoginTitle>\r\n        <LoginBt\r\n          onClick={handleClick}\r\n          style={{ background: `${Common.color.y900}`, border: \"none\" }}\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/kakao.png\"} // 수정된 부분\r\n            alt=\"heart\"\r\n          />\r\n          카카오 3초만에 시작하기\r\n        </LoginBt>\r\n        <LoginBt\r\n        onClick={()=>navigate('/sign/up')}\r\n        >회원가입</LoginBt>\r\n      </LoginWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from \"@emotion/styled/macro\";\nimport { Common } from \"../CommonCss\";\n\nexport const LoginWrap = styled.div`\n  min-width: 1300px;\n  padding: 130px 330px 130px 330px;\n`;\nexport const LoginTitle = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column; /* 세로로 요소를 나열하도록 설정 */\n  align-items: center;\n  /* padding: 30px 0 30px 0; */\n  .logo {\n    font-size: 50px;\n    font-weight: bold;\n    padding-bottom: 130px;\n  }\n  .email-line {\n    position: relative;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${Common.color.p800};\n    padding-bottom: 50px;\n    /* padding: 20px 0 20px 0; */\n    p {\n      font-size: 20px;\n    }\n    .line {\n      height: 2px;\n      width: 30%;\n      background: ${Common.color.p800};\n    }\n  }\n  .login-line {\n    position: relative;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${Common.color.p800};\n    padding: 20px 0 40px 0;\n    p {\n      font-size: 20px;\n    }\n    .line {\n      height: 2px;\n      width: 30%;\n      background: ${Common.color.p800};\n    }\n  }\n`;\nexport const LoginBt = styled.button`\n  width: 100%;\n  height: 60px;\n  margin-bottom: 17px;\n  border-radius: 8px;\n  font-size: 20px;\n  color: ${Common.color.p800};\n  /* background: ${Common.color.y900}; */\n  background: none;\n  border: 1px solid ${Common.color.p500};\n  cursor: pointer;\n  img {\n    width: 21px;\n    margin-right: 10px;\n  }\n`;\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UserOutlined.displayName = 'UserOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);"],"names":["LockOutlined","props","ref","React","AntdIcon","_extends","icon","LockOutlinedSvg","SERVER_URL","rest_api_key","redirect_uri","getKakaoLoginLink","concat","initState","email","password","LoginPage","navigate","useNavigate","loginParam","setLoginParam","useState","handleChange","e","target","name","value","doLogin","moveToPath","useCustomLogin","successFn","result","console","log","failFn","alert","errorFn","_jsx","children","_jsxs","LoginWrap","LoginTitle","className","Form","initialValues","remember","onFinish","async","postLogin","error","Item","rules","required","message","Input","prefix","UserOutlined","placeholder","onChange","style","width","height","fontSize","Password","type","position","display","justifyContent","valuePropName","noStyle","Checkbox","Link","to","Button","htmlType","background","Common","color","f900","LoginBt","onClick","handleClick","kakaoURL","window","location","href","y900","border","src","alt","_styled","styles","p800","p500","UserOutlinedSvg"],"sourceRoot":""}