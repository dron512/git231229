{"version":3,"file":"static/js/610.ea94314d.chunk.js","mappings":"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","sources":["atom/addressState.js","components/singup/Address.js","pages/mypage/SignOutPage.js","styles/mypage/MyPage.js","styles/sign/signArea.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const addressState = atom({\n  key: \"addressState\",\n  default: \"\",\n});\n","import { Button, Form, Input, Modal } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport { useRecoilState } from \"recoil\";\nimport { Common } from \"../../styles/CommonCss\";\nimport { postCodeStyle, themeObj } from \"../../styles/sign/signArea\";\nimport { addressState } from \"../../atom/addressState\";\n\nconst Address = ({ onAddressChange, address:oladdress }) => {\n  const [address, setAddress] = useRecoilState(addressState);\n  const [last, setLast] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [values, setValues] = useState({}); // values 객체 추가\n\n  useEffect(()=>{\n    setAddress(oladdress);\n  },[]);\n\n  const completeHandler = data => {\n    const { address, zonecode } = data;\n\n    setAddress(address);\n    setLast(address); // lastaddress를 address와 동일하게 설정\n    onAddressChange({ zonecode, address, last: address }); // lastaddress를 address와 동일하게 설정\n    setIsOpen(false);\n\n    // 주소 정보를 values 객체에 추가\n    setValues(prevValues => ({\n      ...prevValues,\n      address: address,\n    }));\n  };\n\n  // 주소 입력 변경 핸들러\n  const inputChangeHandler = event => {\n    setAddress({ ...address, last: event.target.value }); // Recoil 상태 업데이트\n  };\n\n  const closeHandler = state => {\n    if (state === \"FORCE_CLOSE\") {\n      setIsOpen(false);\n    } else if (state === \"COMPLETE_CLOSE\") {\n      setIsOpen(false);\n    }\n  };\n\n  const toggleHandler = () => {\n    setIsOpen(true);\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <div style={{ display: \"flex\", width: 193 }} onClick={toggleHandler}>\n        <Form.Item valuePropName=\"zipCode\">\n          <Input\n            style={{ width: 520, height: 60, fontSize: \"20px\" }}\n            value={address}\n            placeholder=\"주소\"\n            name=\"address\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"button\"\n            style={{\n              width: \"110px\",\n              height: \"60px\",\n              backgroundColor: `${Common.color.p900}`,\n              border: \"none\",\n              marginLeft: \"8px\",\n              color: \"white\",\n              fontWeight: \"bold\",\n              fontSize: \"16px\",\n            }}\n          >\n            주소찾기\n          </Button>\n        </Form.Item>\n      </div>\n\n      {isOpen && (\n        <Modal\n          title=\"주소 찾기\"\n          open={isModalOpen}\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer=\"\"\n        >\n          <DaumPostcode\n            theme={themeObj}\n            style={postCodeStyle}\n            onComplete={completeHandler}\n            onClose={closeHandler}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Address;\n","import React, { useState } from \"react\";\r\nimport MyPageContent from \"../../styles/mypage/MyPage\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport { buttonPrimaryStyle } from \"../../styles/sign/signArea\";\r\nimport Address from \"../../components/singup/Address\";\r\nimport { Button, Form, Input, Select } from \"antd\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst doSubmit = () => {\r\n  jwtAxios.put(`${SERVER_URL}/user/update`, {\r\n    \"nickname\": \"dfff\",\r\n    \"password\": \"a123456!\",\r\n    \"phone\": \"01056215621\",\r\n    \"address\": \"주소\",\r\n    \"address2\": \"상세주소\"\r\n  }).then(data => {\r\n    console.log(data);\r\n  }).catch(e => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\nconst MyMainPage = () => {\r\n\r\n  const [email, setEmail] = useState();\r\n  const [phone, setPhone] = useState();\r\n  const [nickname, setNickname] = useState();\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [address2, setAddress2] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const updateAddressInfo = ({ zonecode, address }) => {\r\n    // 주소 정보 업데이트\r\n    // setZonecode(zonecode);\r\n    setAddress(address);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Form name=\"mypage_update\">\r\n        <MyPageContent>회원탈퇴</MyPageContent>\r\n        <hr />\r\n        <div style={{ margin: '2rem', width: '100%', textAlign: \"center\" }}>\r\n          <h2 style={{ padding: '0.7rem', fontSize: '2rem' }}>회원 탈퇴하시면 남은 적립금이 사라집니다 탈퇴하시겠습니까?</h2>\r\n        </div>\r\n        <div style={{display:'flex',justifyContent:\"center\"}}>\r\n          <Button onClick={() => { }}\r\n            type=\"primary\"\r\n            style={{\r\n              background: `${Common.color.f900}`,\r\n              width: \"40%\",\r\n              height: \"60px\",\r\n              fontSize: \"20px\",\r\n              marginRight: \"2rem\"\r\n            }}>회원탈퇴</Button>\r\n          <Button onClick={() => {\r\n            navigate('/mypage/info');\r\n          }}\r\n            type=\"primary\"\r\n            style={{\r\n              background: `${Common.color.f900}`,\r\n              width: \"40%\",\r\n              height: \"60px\",\r\n              fontSize: \"20px\",\r\n            }}>취소</Button>\r\n        </div>\r\n      </Form>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <Link to='/mypage/signout' style={{ fontSize: \"2rem\" }}>      </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMainPage;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport React from \"react\";\r\n\r\nconst MyPageContent = styled.h1`\r\n    font-size: 2rem;\r\n    color:#FF4D35;\r\n`;\r\nexport default MyPageContent;\r\n","import { Common } from \"../CommonCss\";\n\nexport const themeObj = {\n  bgColor: \"#FFFFFF\",\n  pageBgColor: \"#FFFFFF\",\n  postcodeTextColor: \"#C05850\",\n  emphTextColor: \"#222222\",\n};\nexport const postCodeStyle = {\n  width: \"450px\",\n  height: \"500px\",\n};\n\nexport const areaStyle = {\n  width: \"640px\",\n  height: \"60px\",\n  fontSize: \"20px\",\n};\n\nexport const buttonPrimaryStyle = {\n  background: `${Common.color.f900}`,\n  width: \"100%\",\n  height: \"60px\",\n  fontSize: \"20px\",\n};\n"],"names":["addressState","atom","key","default","_ref","onAddressChange","address","oladdress","setAddress","useRecoilState","last","setLast","useState","isOpen","setIsOpen","isModalOpen","setIsModalOpen","values","setValues","useEffect","_jsxs","_Fragment","children","style","display","width","onClick","toggleHandler","_jsx","Form","Item","valuePropName","Input","height","fontSize","value","placeholder","name","Button","type","backgroundColor","concat","Common","color","p900","border","marginLeft","fontWeight","Modal","title","open","onOk","handleOk","onCancel","handleCancel","footer","DaumPostcode","theme","themeObj","postCodeStyle","onComplete","data","zonecode","prevValues","onClose","state","MyMainPage","email","setEmail","phone","setPhone","nickname","setNickname","address2","setAddress2","navigate","useNavigate","MyPageContent","margin","textAlign","padding","justifyContent","background","f900","marginRight","marginTop","Link","to","_styled","target","styles","bgColor","pageBgColor","postcodeTextColor","emphTextColor","areaStyle","buttonPrimaryStyle"],"sourceRoot":""}