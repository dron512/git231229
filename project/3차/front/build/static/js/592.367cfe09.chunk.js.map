{"version":3,"file":"static/js/592.367cfe09.chunk.js","mappings":"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","sources":["atom/addressState.js","components/singup/Address.js","pages/mypage/MyMainPage.js","styles/mypage/MyPage.js","styles/sign/signArea.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const addressState = atom({\n  key: \"addressState\",\n  default: \"\",\n});\n","import { Button, Form, Input, Modal } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport { useRecoilState } from \"recoil\";\nimport { Common } from \"../../styles/CommonCss\";\nimport { postCodeStyle, themeObj } from \"../../styles/sign/signArea\";\nimport { addressState } from \"../../atom/addressState\";\n\nconst Address = ({ onAddressChange, address:oladdress }) => {\n  const [address, setAddress] = useRecoilState(addressState);\n  const [last, setLast] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [values, setValues] = useState({}); // values 객체 추가\n\n  useEffect(()=>{\n    setAddress(oladdress);\n  },[]);\n\n  const completeHandler = data => {\n    const { address, zonecode } = data;\n\n    setAddress(address);\n    setLast(address); // lastaddress를 address와 동일하게 설정\n    onAddressChange({ zonecode, address, last: address }); // lastaddress를 address와 동일하게 설정\n    setIsOpen(false);\n\n    // 주소 정보를 values 객체에 추가\n    setValues(prevValues => ({\n      ...prevValues,\n      address: address,\n    }));\n  };\n\n  // 주소 입력 변경 핸들러\n  const inputChangeHandler = event => {\n    setAddress({ ...address, last: event.target.value }); // Recoil 상태 업데이트\n  };\n\n  const closeHandler = state => {\n    if (state === \"FORCE_CLOSE\") {\n      setIsOpen(false);\n    } else if (state === \"COMPLETE_CLOSE\") {\n      setIsOpen(false);\n    }\n  };\n\n  const toggleHandler = () => {\n    setIsOpen(true);\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <div style={{ display: \"flex\", width: 193 }} onClick={toggleHandler}>\n        <Form.Item valuePropName=\"zipCode\">\n          <Input\n            style={{ width: 520, height: 60, fontSize: \"20px\" }}\n            value={address}\n            placeholder=\"주소\"\n            name=\"address\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"button\"\n            style={{\n              width: \"110px\",\n              height: \"60px\",\n              backgroundColor: `${Common.color.p900}`,\n              border: \"none\",\n              marginLeft: \"8px\",\n              color: \"white\",\n              fontWeight: \"bold\",\n              fontSize: \"16px\",\n            }}\n          >\n            주소찾기\n          </Button>\n        </Form.Item>\n      </div>\n\n      {isOpen && (\n        <Modal\n          title=\"주소 찾기\"\n          open={isModalOpen}\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer=\"\"\n        >\n          <DaumPostcode\n            theme={themeObj}\n            style={postCodeStyle}\n            onComplete={completeHandler}\n            onClose={closeHandler}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Address;\n","import React, { useEffect, useState } from \"react\";\r\nimport MyPageContent from \"../../styles/mypage/MyPage\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport { buttonPrimaryStyle } from \"../../styles/sign/signArea\";\r\nimport Address from \"../../components/singup/Address\";\r\nimport { Button, Form, Input, Select } from \"antd\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\r\nimport 'sweetalert2/src/sweetalert2.scss'\r\n\r\n\r\n\r\nconst MyMainPage = () => {\r\n  const [email, setEmail] = useState();\r\n  const [phone, setPhone] = useState();\r\n  const [nickname, setNickname] = useState();\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [address2, setAddress2] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async()=>{\r\n      jwtAxios.get(`${SERVER_URL}/user/info`)\r\n      .then(result=>{\r\n        setEmail(result.data.email);\r\n        setPhone(result.data.phone);\r\n        setNickname(result.data.nickname);\r\n        setAddress(result.data.address);\r\n        setAddress2(result.data.address2);\r\n      })\r\n      .catch(e=>{\r\n        Swal.fire(\r\n          // {\r\n          //   title: \"회원수정\",\r\n          //   text: \"<p style='font-size:5rem;margin:1rem;'>회원 수정 되었습니다.</p>\",\r\n          //   icon: \"info\"\r\n          // }\r\n          {\r\n          title:\"<p style='font-size:4rem;margin:1rem;'>로그인하세요</p>\",\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        }).then(function(){\r\n          navigate('/sign/in');\r\n        });\r\n      });\r\n    }\r\n    fetchData();\r\n  },[]);\r\n\r\n  const doSubmit = () => {\r\n    jwtAxios.put(`${SERVER_URL}/user/updateUser`, {\r\n      \"nickname\": nickname,\r\n      \"phone\": phone,\r\n      \"address\": address,\r\n      \"address2\": address2\r\n    }).then(data => {\r\n      console.log(data);\r\n      Swal.fire(\r\n        {\r\n        title:\"<p style='font-size:4rem;margin:1rem;'>회원 수정 되었습니다.</p>\",\r\n        icon: \"info\",\r\n        width: 600,\r\n        confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n        confirmButtonColor: `${Common.color.f900}`,\r\n      }\r\n    );\r\n    }).catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  const updateAddressInfo = ({ zonecode, address }) => {\r\n    // 주소 정보 업데이트\r\n    // setZonecode(zonecode);\r\n    setAddress(address);\r\n  };\r\n\r\n  return (address) &&(\r\n    <div style={{ width: '100%' }}>\r\n      <Form name=\"mypage_update\">\r\n        <MyPageContent>내 정보관리</MyPageContent>\r\n        <hr />\r\n        <div style={{ margin: '2rem', width: '100%' }}>\r\n          <h2 style={{ padding: '0.7rem', fontSize: '2rem' }}>필수 정보</h2>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div style={{ width: '100%' }}>\r\n              <Form.Item>\r\n                <Input placeholder='email'\r\n                  disabled\r\n                  style={{\r\n                    width: '40%', fontSize: '2rem',\r\n                    padding: '1rem', margin: '0.5rem'\r\n                  }} value={email} onChange={(e) => setEmail(e.target.value)} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Input placeholder='phone'\r\n                  style={{\r\n                    width: '40%', fontSize: '2rem',\r\n                    padding: '1rem', margin: '0.5rem'\r\n                  }}\r\n                  value={phone}\r\n                  onChange={(e) => setPhone(e.target.value)} />\r\n              </Form.Item>\r\n            </div>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <Form.Item>\r\n                <Input placeholder='nickname'\r\n                  style={{\r\n                    width: '40%', fontSize: '2rem',\r\n                    padding: '1rem', margin: '0.5rem'\r\n                  }}\r\n                  value={nickname}\r\n                  onChange={(e) => setNickname(e.target.value)} />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr style={{ marginBottom: \"2rem\" }}></hr>\r\n        <div style={{ padding: \"2rem\" }}>\r\n          <Address onAddressChange={updateAddressInfo} address={address} />\r\n          <Form.Item>\r\n            <Input\r\n              style={{ height: 60, fontSize: \"20px\", width: \"49%\" }}\r\n              onChange={e => setAddress2(e.target.value)}\r\n              value={address2}\r\n              placeholder=\"상세주소\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <Button onClick={doSubmit}\r\n          type=\"primary\"\r\n          style={{\r\n            background: `${Common.color.f900}`,\r\n            width: \"50%\",\r\n            height: \"60px\",\r\n            fontSize: \"20px\",\r\n          }}>회원수정</Button>\r\n      </Form>\r\n      <div style={{marginTop:\"2rem\"}}>\r\n        <Link to='/mypage/signout' style={{fontSize:\"2rem\"}}>회원탈퇴</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMainPage;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport React from \"react\";\r\n\r\nconst MyPageContent = styled.h1`\r\n    font-size: 2rem;\r\n    color:#FF4D35;\r\n`;\r\nexport default MyPageContent;\r\n","import { Common } from \"../CommonCss\";\n\nexport const themeObj = {\n  bgColor: \"#FFFFFF\",\n  pageBgColor: \"#FFFFFF\",\n  postcodeTextColor: \"#C05850\",\n  emphTextColor: \"#222222\",\n};\nexport const postCodeStyle = {\n  width: \"450px\",\n  height: \"500px\",\n};\n\nexport const areaStyle = {\n  width: \"640px\",\n  height: \"60px\",\n  fontSize: \"20px\",\n};\n\nexport const buttonPrimaryStyle = {\n  background: `${Common.color.f900}`,\n  width: \"100%\",\n  height: \"60px\",\n  fontSize: \"20px\",\n};\n"],"names":["addressState","atom","key","default","_ref","onAddressChange","address","oladdress","setAddress","useRecoilState","last","setLast","useState","isOpen","setIsOpen","isModalOpen","setIsModalOpen","values","setValues","useEffect","_jsxs","_Fragment","children","style","display","width","onClick","toggleHandler","_jsx","Form","Item","valuePropName","Input","height","fontSize","value","placeholder","name","Button","type","backgroundColor","concat","Common","color","p900","border","marginLeft","fontWeight","Modal","title","open","onOk","handleOk","onCancel","handleCancel","footer","DaumPostcode","theme","themeObj","postCodeStyle","onComplete","data","zonecode","prevValues","onClose","state","MyMainPage","email","setEmail","phone","setPhone","nickname","setNickname","address2","setAddress2","navigate","useNavigate","async","jwtAxios","get","SERVER_URL","then","result","catch","e","Swal","icon","confirmButtonText","confirmButtonColor","f900","fetchData","MyPageContent","margin","padding","flexDirection","disabled","onChange","target","flexGrow","marginBottom","Address","doSubmit","put","console","log","background","marginTop","Link","to","_styled","styles","bgColor","pageBgColor","postcodeTextColor","emphTextColor","areaStyle","buttonPrimaryStyle"],"sourceRoot":""}