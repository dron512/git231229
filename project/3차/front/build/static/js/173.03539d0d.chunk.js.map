{"version":3,"file":"static/js/173.03539d0d.chunk.js","mappings":"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","sources":["api/productApi.js","components/basic/SideBt.js","components/basic/SideTitle.js","hooks/useCustomQuery.js","components/product/ProductSidebar.js","pages/product/ProductListPage.js","styles/product/sideBarCss.js"],"sourcesContent":["import axios from \"axios\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { SERVER_URL } from \"./config\";\r\n\r\nconst prefix = `${SERVER_URL}/main`;\r\n\r\nexport const postMainCate = async ({\r\n  values,\r\n  address,\r\n  withdrawStatus,\r\n  successFn,\r\n  failFn,\r\n  errFn,\r\n}) => {\r\n  try {\r\n    const url = `${prefix}/main`;\r\n    const res = await axios.post(url, {\r\n      ...values,\r\n      address: address,\r\n      withdrawStatus: withdrawStatus, // 추가 정보 전달\r\n    });\r\n    const status = res.status.toString();\r\n    const httpSt = status.charAt(0);\r\n    if (httpSt === \"2\") {\r\n      return successFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    if (error.request.readyState === 4) {\r\n      return failFn();\r\n    } else {\r\n      errFn(\"서버에러에요\");\r\n    }\r\n  }\r\n};\r\n\r\n// Final\r\nexport const getAlcholType = async (mainCategory, subCategory) => {\r\n  console.log(\"m-axios  :\", mainCategory);\r\n  console.log(\"s-axios  :\", subCategory);\r\n  let category;\r\n  if (subCategory !== \"\") {\r\n    category = subCategory;\r\n  } else {\r\n    category = mainCategory;\r\n  }\r\n  if(!category){\r\n    return\r\n  }\r\n  try {\r\n    const response = await axios.get(\r\n      `${SERVER_URL}/search/category?category=${category}`,\r\n    );\r\n    if (response.status === 200) {\r\n      // console.log(\"data :\", response.data);\r\n      return response.data;\r\n    } else {\r\n      console.log(\"no\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const nonSignAlcholSearch = async ( {search} ) => {\r\n  console.log(\"axios-data\", search);\r\n  try {\r\n    const response = await axios.post(\r\n      `${SERVER_URL}/main/anony/contents`,\r\n      search,\r\n    );\r\n    console.log(response.status)\r\n    if (response.status === 200) {\r\n      console.log(\"result\", response.data);\r\n      const result = response.data;\r\n      return result;\r\n    } else {\r\n      console.log(\"no\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    // alert(error.response.data.errorMessage)\r\n  }\r\n};\r\n\r\n// export const nonSignAlcholSearch = async ( search ) => {\r\n//   console.log(\"axios-data\", search);\r\n//   const searchCon = {\r\n//     searchcontents: search\r\n//   }\r\n//     await axios.post(\r\n//       `${SERVER_URL}/main/anony/contents`,\r\n//       searchCon,\r\n//     ).then(res =>{\r\n//         console.log(res.data)\r\n//     })\r\n// };\r\n// export const SignAlcholSearch = async () => {};\r\n\r\nexport const SignAlcholSearch = async ({ search }) => {\r\n  console.log(\"axios-data\", search); \r\n  try {\r\n    const response = await jwtAxios.post(`${SERVER_URL}/main/contents`, search);\r\n    if (response.status === 200) {\r\n      const result = response.data;\r\n      return result;\r\n    } else {\r\n      console.log(\"no\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getDetail = async ({ code }) => {\r\n  console.log(\"axios\", code);\r\n  const codeParam = {\r\n    code: Number(code),\r\n  };\r\n  console.log(\"params  \", codeParam);\r\n  try {\r\n    const response = await jwtAxios.post(`${SERVER_URL}/detail`, codeParam);\r\n    if (response.status === 200) {\r\n      console.log(\"R : \", response.data);\r\n      return response.data;\r\n    } else {\r\n      console.log(\"no\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getRecent = async () => {\r\n  try {\r\n    const response = await axios.get(`${SERVER_URL}/main/recnet`);\r\n    if (response.status === 200) {\r\n      console.log(\"결과값 : \", response.data);\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getUserRecent = async () => {\r\n  try {\r\n    const response = await jwtAxios.get(`${SERVER_URL}/main/recent`);\r\n    if (response.status === 200) {\r\n      console.log(\"결과값 : \", response.data);\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getMarketPath = async ({ code }) => {\r\n  console.log(\"ax:\", code);\r\n  const postcode = {\r\n    code: code,\r\n  };\r\n  try {\r\n    const response = await jwtAxios.post(\r\n      `${SERVER_URL}/detail/market`,\r\n      postcode,\r\n    );\r\n    if (response.status === 200) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const postAddCart = async ({ postcard }) => {\r\n  console.log(\"ax :\", postcard);\r\n  try {\r\n    const response = await jwtAxios.post(\r\n      `${SERVER_URL}/shoppingbasket`,\r\n      postcard,\r\n    );\r\n    if (response.status === 200) {\r\n      console.log(\"result :\", response.data);\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled/macro\";\r\nimport React from \"react\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\n\r\nconst SideBt = ({ sidenNm, sideId, active, onClick }) => {\r\n  console.log(`active ${active}`);\r\n  console.log(`sidenNm ${active}`);\r\n  console.log(`onClick ${onClick}`);\r\n  const SideBtStyled = styled.button`\r\n    border: none;\r\n    background: none;\r\n    color: ${active ? Common.color.f900 : Common.color.p900};\r\n    font-weight: ${active ? \"bold\" : \"normal\"};\r\n    text-decoration: ${active ? \"underline\" : \"none\"};\r\n    margin-top: 20px;\r\n    cursor: pointer;\r\n  `;\r\n  return (\r\n    <div>\r\n      <SideBtStyled active={active} onClick={onClick}>\r\n        {sidenNm}\r\n      </SideBtStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBt;\r\n","import styled from \"@emotion/styled/macro\";\nimport React from \"react\";\n\nconst SideTitle = ({ sideTitle, onClick }) => {\n  const SideTitleStyle = styled.div`\n    margin: 0 0 10px 0;\n    p {\n      font-size: 30px;\n      font-weight: bold;\n    }\n  `;\n  return (\n    <SideTitleStyle onClick={onClick}>\n      <p>{sideTitle}</p>\n    </SideTitleStyle>\n  );\n};\n\nexport default SideTitle;\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n\r\nexport const useCustomQuery = () => {\r\n  const navigate = useNavigate();\r\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\r\n\r\n  const getType = (check, init) => {\r\n    if (!check) {\r\n      return init;\r\n    }\r\n    return check;\r\n  };\r\n\r\n  // Product-Custom-hook\r\n  // 술 종류에 따른 QueryString\r\n  const type = urlSearchParams.get(\"type\") || \"\";\r\n  const sub = urlSearchParams.get(\"subtype\") || \"\";\r\n  const search = urlSearchParams.get(\"search\") || \"\";\r\n\r\n  const defaultQueryString = createSearchParams({\r\n    type,\r\n    // search,\r\n  }).toString();\r\n\r\n  //   술에 따른 이동\r\n  const MoveToType = TypeParam => {\r\n    console.log(\"type-parameter\", TypeParam);\r\n    let queryStr = \"\";\r\n    if (TypeParam) {\r\n      const TypeString = getType(TypeParam.type, type);\r\n      queryStr = createSearchParams({\r\n        type: TypeString,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  const MoveToSearch = Searchparam => {\r\n    console.log('이서브파람 = ',Searchparam)\r\n    let queryStr = \"\";\r\n    console.log(\"parameter : \", Searchparam);\r\n    if (Searchparam) {\r\n      const SearchString = getType(Searchparam, search);\r\n      queryStr = createSearchParams({\r\n        search: SearchString,\r\n      }).toString();\r\n    } else {\r\n      queryStr = defaultQueryString;\r\n    }\r\n    navigate({ pathname: \"/product/list\", search: queryStr });\r\n  };\r\n\r\n  return { type, sub, MoveToType, MoveToSearch, search };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { SideBar } from \"../../styles/product/sideBarCss\";\r\nimport SideBt from \"../basic/SideBt\";\r\nimport SideTitle from \"../basic/SideTitle\";\r\n\r\nconst ProductSidebar = (type,search) => {\r\n  // search\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const searchQuery = queryParams.get(\"search\");\r\n  // Type,sub-type\r\n  const typeProps = type.type;\r\n\r\n  console.log(\"side-search 입니다. --------- \", searchQuery);\r\n\r\n  const naviage = useNavigate();\r\n  const [status, setStatus] = useState([]);\r\n\r\n  const handleClickAll = typeProps => {\r\n    if (typeProps === \"위스키\") {\r\n      // console.log(\"typeProps : \", typeProps);\r\n      naviage(\"/product/list?type=위스키\");\r\n    } else if (typeProps === \"와인\") {\r\n      naviage(\"/product/list?type=와인\");\r\n    } else if (typeProps === \"리큐르\") {\r\n      naviage(\"/product/list?type=리큐르\");\r\n    } else if (typeProps === \"브랜디\") {\r\n      naviage(\"/product/list?type=브랜디\");\r\n    }\r\n  };\r\n  const handleClickSelectOne = typeProps => {\r\n    console.log(\"typeProps : \", typeProps);\r\n    if (typeProps === \"위스키\") {\r\n      naviage(\"/product/list?type=위스키&subtype=싱글몰트\");\r\n    } else if (typeProps === \"와인\") {\r\n      naviage(\"/product/list?type=와인&subtype=레드와인\");\r\n    } else if (typeProps === \"브랜디\") {\r\n      naviage(\"/product/list?type=브랜디&subtype=꼬냑\");\r\n    }\r\n  };\r\n  const handleClickSelectTwo = typeProps => {\r\n    console.log(\"typeProps : \", typeProps);\r\n    if (typeProps === \"위스키\") {\r\n      naviage(\"/product/list?type=위스키&subtype=블렌디드\");\r\n    } else if (typeProps === \"와인\") {\r\n      naviage(\"/product/list?type=와인&subtype=화이트와인\");\r\n    } else if (typeProps === \"리큐르\") {\r\n      naviage(\"/product/list?type=리큐르\");\r\n    } else if (typeProps === \"브랜디\") {\r\n      naviage(\"/product/list?type=브랜디&subtype=깔바도스\");\r\n    }\r\n  };\r\n  const handleClickSelectThree = typeProps => {\r\n    console.log(\"typeProps : \", typeProps);\r\n    if (typeProps === \"위스키\") {\r\n      naviage(\"/product/list?type=위스키&subtype=버번\");\r\n    } else if (typeProps === \"와인\") {\r\n      naviage(\"/product/list?type=와인&subtype=스파클링와인\");\r\n    } else if (typeProps === \"리큐르\") {\r\n      naviage(\"/product/list?type=리큐르\");\r\n    } else if (typeProps === \"브랜디\") {\r\n      naviage(\"/product/list?type=브랜디&subtype=아르마냑\");\r\n    }\r\n  };\r\n  const handleClickSelectFour = typeProps => {\r\n    if (typeProps === \"와인\") {\r\n      naviage(\"/product/list?type=와인&subtype=로제와인\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let resultColumn;\r\n    if (typeProps === \"위스키\") {\r\n      // console.log(\"위스키입니다.\");\r\n      resultColumn = whiskeyColumn;\r\n    } else if (typeProps === \"와인\") {\r\n      // console.log(\"와인입니다.\");\r\n      resultColumn = wineColumn;\r\n    } else if (typeProps === \"브랜디\") {\r\n      // console.log(\"브랜디\");\r\n      resultColumn = brandyColumn;\r\n    } else if (typeProps === \"리큐르\") {\r\n      // console.log(\"리큐르\");\r\n      resultColumn = liqueurColumn;\r\n    } else if (searchQuery !== null || search) {\r\n      resultColumn = searchColumn;\r\n    } else {\r\n      console.log(\"No match\");\r\n    }\r\n    console.log(\"result\", resultColumn);\r\n    setStatus(resultColumn);\r\n  }, []);\r\n\r\n  const whiskeyColumn = [\"WHISKEY\", \"ALL\", \"싱글몰트\", \"블렌디드\", \"버번\"];\r\n  const wineColumn = [\r\n    \"WINE\",\r\n    \"ALL\",\r\n    \"레드와인\",\r\n    \"화이트와인\",\r\n    \"스파클링 와인\",\r\n    \"로제 와인\",\r\n  ];\r\n  const liqueurColumn = [\"LIQUEUR\", \"ALL\"];\r\n  const brandyColumn = [\"BRANDY\", \"ALL\", \"꼬냑\", \"깔바도스\", \"아르마냑\"];\r\n  const searchColumn = [\"검색결과\", \"\"];\r\n\r\n  return (\r\n    <SideBar>\r\n      <SideTitle sideTitle={`${status?.[0]}`} />\r\n      <hr />\r\n      <div className=\"side-nav\">\r\n        <SideBt\r\n          sidenNm={`${status?.[1]}`}\r\n          sideId={1}\r\n          // active={activeSide === 1} // 고유 숫자와 비교\r\n          onClick={() => handleClickAll(typeProps)} // 고유 숫자 전달\r\n        />\r\n        {status?.[1] && status.length > 2 ? (\r\n          <SideBt\r\n            sidenNm={`${status?.[2]}`}\r\n            sideId={2}\r\n            // active={activeSide === 2}\r\n            onClick={() => handleClickSelectOne(typeProps)}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {status?.[2] && status.length > 3 ? (\r\n          <SideBt\r\n            sidenNm={`${status?.[3]}`}\r\n            sideId={3}\r\n            // active={activeSide === 3}\r\n            onClick={() => handleClickSelectTwo(typeProps)}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {status?.[3] && status.length > 4 ? (\r\n          <SideBt\r\n            sidenNm={`${status?.[4]}`}\r\n            sideId={4}\r\n            // active={activeSide === 4}\r\n            onClick={() => handleClickSelectThree(typeProps)}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {status?.[4] && status.length > 5 ? (\r\n          <SideBt\r\n            sidenNm={`${status?.[5]}`}\r\n            sideId={5}\r\n            // active={activeSide === 4}\r\n            onClick={() => handleClickSelectFour(typeProps)}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </SideBar>\r\n  );\r\n};\r\n\r\nexport default ProductSidebar;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport {\r\n  SignAlcholSearch,\r\n  getAlcholType,\r\n  getRecent,\r\n  getUserRecent,\r\n  nonSignAlcholSearch,\r\n} from \"../../api/productApi\";\r\nimport ProductCard from \"../../components/product/ProductCard\";\r\nimport ProductSidebar from \"../../components/product/ProductSidebar\";\r\nimport ProSearch from \"../../components/product/ProSearch\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { useCustomQuery } from \"../../hooks/useCustomQuery\";\r\nimport {\r\n  GridContainer,\r\n  ProListWrap,\r\n  ProductWrap,\r\n} from \"../../styles/product/proWrapCss\";\r\n\r\n\r\nconst ProductPage = ({test}) => {\r\n  const { isLogin } = useCustomLogin();\r\n  const { type, sub, search, MoveToSearch } = useCustomQuery();\r\n  const params = { type, sub, search };\r\n\r\n  // @AREA  이 부분은 테스트용\r\n  const initState = [\r\n    {\r\n      code: 0,\r\n      name: \"\",\r\n      price: 0,\r\n      ratingaverage: 0,\r\n      picture: \"\",\r\n    },\r\n  ];\r\n  const searchInitState = {\r\n    searchcontents: search,\r\n  };\r\n  const [alcoholSearch, setAlcoholSearch] = useState(searchInitState);\r\n\r\n  const mainCategory = `${params.type}`;\r\n  const subCategory = `${params.sub}`;\r\n\r\n  // const [productData, setProductData] = useState(initState);\r\n  const { data: productData } = useQuery({\r\n    queryKey: [\"product/list\", params],\r\n    queryFn: () => getAlcholType(mainCategory, subCategory),\r\n  });\r\n\r\n  const sideParam = params.type;\r\n  const [searchData, setSearchData] = useState(initState);\r\n\r\n  const SearchMutation = useMutation({\r\n    mutationFn: search => nonSignAlcholSearch({ search }),\r\n    onSuccess: result => {\r\n      MoveToSearch(alcoholSearch.searchcontents);\r\n      setSearchData(result);\r\n    },\r\n    onError: () => {},\r\n  });\r\n\r\n  // 회원용 서치\r\n  const UserSearchMutation = useMutation({\r\n    mutationFn: search => SignAlcholSearch({ search }),\r\n    onSuccess: result => {\r\n      MoveToSearch(alcoholSearch.searchcontents);\r\n      setSearchData(result);\r\n    },\r\n    onError: () => {},\r\n  });\r\n\r\n  const handleChangeSearch =  e => {\r\n    setAlcoholSearch(prevValue => ({\r\n      searchcontents: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const [searchText, setSearchText] = useState();\r\n  // const handleClickSearch = () => {\r\n  //   SearchMutation.mutate(alcoholSearch);\r\n  // };\r\n\r\n  const handleClickSearch = () => {\r\n    if (isLogin) {\r\n      UserSearchMutation.mutate(alcoholSearch);\r\n    } else {\r\n      SearchMutation.mutate(alcoholSearch);\r\n    }\r\n  };\r\n\r\n  // @AREA  Select(Sort) 관련\r\n  const selectInitState = {\r\n    category: \"\",\r\n  };\r\n  \r\n  const [select, setSelect] = useState(selectInitState);\r\n  const handleClickSelect = e => {\r\n    console.log(\"선택된 카테고리\", e.target.value);\r\n    setSelect(prevValue => ({\r\n      ...prevValue,\r\n      // category는 API가 없어서 임의로 넣은 변수\r\n      category: e.target.value,\r\n    }));\r\n    console.log(\"선택된 카테고리\", select);\r\n  };\r\n\r\n  // 최근 검색어\r\n  const { data: recentData, refetch } = useQuery({\r\n    queryKey: [],\r\n    queryFn: () => {\r\n      if (isLogin) {\r\n        getUserRecent();\r\n      }\r\n    },\r\n    enabled: false,\r\n  });\r\n\r\n  // const recentData = data;\r\n  // recentData => 일딴 회원기준으로 데이터는 나옴\r\n  console.log(\"검색어 결과 \", recentData);\r\n  const handleClickRecent = () => {\r\n    console.log(\"검색바 클릭\");\r\n    // setRecentFlag(recnetFlag);\r\n    refetch();\r\n  };\r\n\r\n  const searchWord = event => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(search){\r\n      setAlcoholSearch(prevValue => ({\r\n        ...prevValue,\r\n        searchcontents: search,\r\n      }));\r\n      handleClickSearch();\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <ProductWrap>\r\n      {/* Side-bar Component */}\r\n      { <ProductSidebar type={sideParam} search={search} />}\r\n\r\n      {/* Search-bar Component */}\r\n      <ProListWrap>\r\n        <ProSearch\r\n          // @COMMENT Search Props\r\n          onSearchChange={e => handleChangeSearch(e)}\r\n          searchValue={alcoholSearch.searchcontents}\r\n          searchName=\"searchcontents\"\r\n          searchPlaceholder=\"검색할 주류를 입력해주세요.\"\r\n          onSearchClick={handleClickSearch}\r\n          // @COMMENT Select Props\r\n          onSelectChange={e => handleClickSelect(e)}\r\n          selectValue={select.category}\r\n          onRecentClick={handleClickRecent}\r\n        />\r\n        {/* <ProSearchForm>\r\n        <div className=\"search-wrap\">\r\n          <div className=\"search-info\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-word\"\r\n              placeholder={'검색할 주류를 입력해주세요.'}\r\n              name={'searchcontents'}\r\n              onChange={searchWord}\r\n            />\r\n            <button className=\"search-bt\" onClick={searchAlcohol}>\r\n              <img src={process.env.PUBLIC_URL + `/images/search.png`} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"line\"></div>\r\n          <select\r\n            // value={selecteOption}\r\n            // onChange={onChangeOption}\r\n            // style={{\r\n            //   margin: \"0 auto\",\r\n            // }}\r\n            // onChange={onSelectChange}\r\n          >\r\n            <option value={0}>인기순</option>\r\n            <option value={1}>높은 가격순</option>\r\n            <option value={2}>낮은 가격순</option>\r\n          </select>\r\n        </div>\r\n        </ProSearchForm> */}\r\n        <div></div>\r\n\r\n        {/* Content Component (Card) */}\r\n        <GridContainer>\r\n          {productData?.map((product, index) => {\r\n              return <ProductCard key={index} data={product} />;\r\n          })}\r\n\r\n          {/* Search - Component */}\r\n          {searchData?.map((product, index) => (\r\n            <ProductCard key={index} data={product} />\r\n          ))}\r\n        </GridContainer>\r\n      </ProListWrap>\r\n    </ProductWrap>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import styled from \"@emotion/styled/macro\";\nimport { Common } from \"../CommonCss\";\n\nexport const SideBar = styled.div`\n  width: 10vw;\n  margin-right: 40px;\n  hr {\n    border: 2px solid ${Common.color.p900};\n  }\n  .side-nav {\n    font-size: 16px;\n\n    a {\n      color: ${Common.color.p600};\n    }\n  }\n`;\n"],"names":["concat","SERVER_URL","getAlcholType","async","mainCategory","subCategory","category","console","log","response","axios","get","status","data","error","nonSignAlcholSearch","search","_ref2","post","SignAlcholSearch","_ref3","jwtAxios","getDetail","code","_ref4","codeParam","Number","getUserRecent","getMarketPath","_ref5","postcode","postAddCart","postcard","_ref6","_ref","sidenNm","sideId","active","onClick","SideBtStyled","_styled","target","Common","color","f900","p900","_jsx","children","sideTitle","SideTitleStyle","name","styles","useCustomQuery","navigate","useNavigate","urlSearchParams","setUrlSearchParams","useSearchParams","getType","check","init","type","sub","defaultQueryString","createSearchParams","toString","MoveToType","TypeParam","queryStr","TypeString","pathname","MoveToSearch","Searchparam","SearchString","ProductSidebar","location","useLocation","searchQuery","URLSearchParams","typeProps","naviage","setStatus","useState","useEffect","resultColumn","whiskeyColumn","wineColumn","brandyColumn","liqueurColumn","searchColumn","_jsxs","SideBar","SideTitle","className","SideBt","handleClickAll","length","handleClickSelectOne","handleClickSelectTwo","handleClickSelectThree","handleClickSelectFour","test","isLogin","useCustomLogin","params","searchInitState","searchcontents","alcoholSearch","setAlcoholSearch","productData","useQuery","queryKey","queryFn","sideParam","searchData","setSearchData","price","ratingaverage","picture","SearchMutation","useMutation","mutationFn","onSuccess","result","onError","UserSearchMutation","searchText","setSearchText","handleClickSearch","mutate","select","setSelect","recentData","refetch","enabled","prevValue","ProductWrap","ProListWrap","ProSearch","onSearchChange","e","value","handleChangeSearch","searchValue","searchName","searchPlaceholder","onSearchClick","onSelectChange","handleClickSelect","selectValue","onRecentClick","handleClickRecent","GridContainer","map","product","index","ProductCard","p600"],"sourceRoot":""}